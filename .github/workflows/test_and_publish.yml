name: Run test and publish if new version

on:
  push:
    branches:
      master

jobs:
  run_tests:
    runs-on: ubuntu-latest

    steps:
      - name: "Getting the sources"
        uses: actions/checkout@v2

      - name: "Setup"
        run: npm install --ignore-scripts

      - name: "Tests"
        run: npm test

  publish:
    needs: run_tests
    runs-on: ubuntu-latest

    steps:
      - name: "Getting the sources"
        uses: actions/checkout@v2

      - name: "Set up the NPM environment"
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@dplocki'

      - name: "Get version of last NPM package"
        id: GetLastPackageVersion
        run: echo "::set-output name=version::"`npm info @dplocki/generic-conversation-bot version`
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "Get version from package.json"
        id: GetCurrentVersion
        run: echo "::set-output name=version::"`node -p 'require("./package.json").version'`

      - name: Publish package
        if: ${{ steps.GetCurrentVersion.outputs.version != steps.GetLastPackageVersion.outputs.version }}
        run: |
          npm install --ignore-scripts
          npm publish --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Tag
        if: ${{ steps.GetCurrentVersion.outputs.version != steps.GetLastPackageVersion.outputs.version }}
        uses: negz/create-tag@v1
        with:
          version: v${{ steps.GetCurrentVersion.outputs.version }}
          message: Release for version v${{ steps.GetCurrentVersion.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
